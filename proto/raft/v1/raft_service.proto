
syntax = "proto3";

option go_package = "github.com/structx/lightnode/proto/raft/v1";

package raft.v1;

service RaftServiceV1 {
    rpc AppendEntries (AppendEntryRequest) returns (AppendEntryResponse) {}
    rpc RequestVote (RequestVoteRequest) returns (RequestVoteResponse) {}
    rpc InstallSnapshot (InstallSnapshotRequest) returns (InstallSnapshotResponse) {}
}

message Log {
    int64 term = 1;
    int64 index = 2;
    bytes cmd = 3;
}

message AppendEntryRequest {
    int64 term = 1;
    string leader_id = 2;
    int64 prev_log_index = 3;
    int64 prev_log_term = 4;
    repeated Log entries = 5;
    int64 leader_commit = 6;
}

message AppendEntryResponse {
    int64 term = 1;
    bool success = 2;
}

message RequestVoteRequest {
    int64 term = 1;
    string candidate_id = 2;
    int64 last_log_index = 3;
    int64 last_log_term = 4;
}

message RequestVoteResponse {
    int64 term = 1;
    bool vote_granted = 2;
}

// Invoke by leader to send chunks of a snapshot to a follower
// Leaders always send chunks in order
message InstallSnapshotRequest {
    // leaders term
    int64 term = 1;
    // follower can redirect clients
    string leader_id = 2;
    // snapshot replaces all entries up through and including this index
    int64 last_included_index = 3;
    // term of lastIncludedIndex
    int64 last_included_term = 4;
    // bytes offset where chunk is positioned in the snapshot file
    bytes offset = 5;
    // raw bytes of the snapshot chunk, starting at offset
    bytes data = 6;
}

message InstallSnapshotResponse {
    // current term for leader to update itself
    int64 term = 1;
}